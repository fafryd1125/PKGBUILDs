# $Id$
# Maintainer: Darek Zielski <dz1125.bug.tracker@gmail.com>
# Contributor: Felix Yan <felixonmars@archlinux.org>

# The Meson Build system:     http://mesonbuild.com/index.html
# This is a work-in-progress: https://github.com/aaronp24/libglvnd/tree/meson
# Set "1" to enable

_meson=1

_pkgname=libglvnd
pkgname=lib32-libglvnd-git
pkgver=r571.f6d236e
pkgrel=1
pkgdesc="The GL Vendor-Neutral Dispatch library"
arch=('x86_64')
url="https://github.com/NVIDIA/libglvnd"
license=('custom:BSD-like')
source=("libglvnd::git+https://github.com/NVIDIA/libglvnd.git"
        '0001-khronos-xml-m4.patch'
        'meson_build.patch'
        'arch-clang32.txt')
sha1sums=('SKIP'
          '88b8f2e4d517ba34a46c4f64ce96840eab28dc4a'
          'ccc9d8af5b66f5d9902aebc131939c5d9cc42374'
          'e7f11cd0fd68e8dc6c9b2a8e1262c05c473a51b2')

depends=('lib32-libxext' 'libglvnd-git')
_makedepends=('lib32-libx11' 'git' 'glproto' 'lib32-clang')
provides=('lib32-libglvnd' 'lib32-libgl' 'lib32-libegl' 'lib32-libgles')
conflicts=('lib32-libglvnd')

if [[ ${_meson} = 1 ]]; then
  makedepends=(${_makedepends[@]} 'meson')
else
  makedepends=(${_makedepends[@]} 'python')
fi

pkgver() {
  cd "${_pkgname}"
  printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  if [[ ${_meson} = 1 ]]; then
    mkdir build

    cd "${_pkgname}"
    patch -p1 -i ../0001-khronos-xml-m4.patch
    patch -p1 -i ../meson_build.patch
  else
    cd "${_pkgname}"
    # Uncomment if needed

    # *.xml - https://www.khronos.org/
    # *.m4  - https://www.gnu.org/software/autoconf-archive/The-Macros.html#The-Macros
    patch -p1 -i ../0001-khronos-xml-m4.patch

    # https://github.com/NVIDIA/libglvnd/pulls
#    patch -p1 -i ../
  fi
}

build() {
  export PKG_CONFIG_PATH='/usr/lib32/pkgconfig'

  if [[ ${_meson} = 1 ]]; then
    cd build
    meson \
        --prefix=/usr \
        --libdir=/usr/lib32/ \
        --buildtype=release \
        --cross-file ../arch-clang32.txt \
        ../${_pkgname}
    ninja
  else
    export CC='clang -m32'
    export CXX='clang++ -m32'

    cd "${_pkgname}"
    ./autogen.sh
    ./configure \
        --prefix=/usr \
        --libdir=/usr/lib32 \
        --build=i686-pc-linux-gnu \
        --enable-shared \
        --enable-static=no
    make
  fi
}

check() {
  if [[ ${_meson} = 1 ]]; then
    cd build
    ninja test
  else
    cd "${_pkgname}"
    make check
  fi
}

package() {
  if [[ ${_meson} = 1 ]]; then
    cd build
    DESTDIR="${pkgdir}" ninja install
  else
    cd "${_pkgname}"
    make DESTDIR="${pkgdir}" install
  fi

  cd "${srcdir}/${_pkgname}"
  rm -r "${pkgdir}/usr/include"

  mkdir -p "${pkgdir}/usr/share/licenses"
  ln -s "${pkgname#*-}" "${pkgdir}/usr/share/licenses/${pkgname}"
}
